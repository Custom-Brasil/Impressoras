// File Revision
// Rev 1.04
//
// Rev. notes:
// - rel 1.00: first release
//
// - rel 1.01: Fixed the signature for GETVARIABLE_FN and SETVARIABLE_FN
//
// - rel 1.02: Add OPENCASHDRAWER_FN signature
//			   Add PRINTTEXTUTF8_FN signature
//			   Add PRINTTEXTUTF8EX_FN signature
//			   Add EJECTWITHTIMEOUT_FN signature
//
// - rel 1.03: Add SETGRAPHICSTOPMARGIN_FN signature
//			   Add GETGRAPHICSTOPMARGIN_FN signature
//
// - rel 1.04: Add GETCAPCODEPAGESLIST_FN signature
//			   Add TRANSACTIONPRINT_FN signature





// NOTE: Please DO NOT EDIT THIS FILE

///
/// \file ccw_DeviceImpl.h
/// \brief Definition for API function pointers. 
///

#ifndef _CCW_DEVICEIMPL_H__
#define _CCW_DEVICEIMPL_H__

#include "ccw_Status.h"

// Hide in documentation
/// @cond PRIVATE

#ifdef __cplusplus
extern "C" {
#endif

	typedef CcwResult(WINAPI * INITLIBRARY_FN)									(CcwLogVerbosity logVerbosityLevel, wchar_t* pstrLogFolder);
	typedef CcwResult(WINAPI * DEINITLIBRARY_FN)								();
	typedef CcwResult(WINAPI * CLOSEDEVICE_FN)									(DWORD dwPrinterDevID);
	typedef CcwResult(WINAPI * CLOSEALLDEVICES_FN)								();

	typedef CcwResult(WINAPI * GETAPIVERSION_FN)								(wchar_t* pAPIVersion);	
	
	typedef CcwResult(WINAPI * GETINFOPRINTERID_FN)								(DWORD dwPrinterDevID, WORD* pwPrinterID);
	typedef CcwResult(WINAPI * GETINFOFIRMWAREVERSION_FN)						(DWORD dwPrinterDevID, wchar_t* pFirmwareVersion);
	typedef CcwResult(WINAPI * GETINFODEVICEMODEL_FN)							(DWORD dwPrinterDevID, wchar_t* pDeviceModel);
	
	typedef CcwResult(WINAPI * GETCAPCOMMPORTTYPE_FN)							(DWORD dwPrinterDevID, CommunicationPortType* pcomPortType);
	typedef CcwResult(WINAPI * GETCAPPRINTAVAILABLE_FN)							(DWORD dwPrinterDevID, BOOL* pbPrnAvailable);	
	typedef CcwResult(WINAPI * GETCAPPRINTERRESOLUTION_FN)						(DWORD dwPrinterDevID, DWORD* pdwPrinterResolution);
	typedef CcwResult(WINAPI * GETCAPPRINTWIDTH_FN)								(DWORD dwPrinterDevID, DWORD* pdwPageWidth);
	typedef CcwResult(WINAPI * SETCAPPRINTWIDTH_FN)								(DWORD dwPrinterDevID, DWORD dwNewPageWith);
	typedef CcwResult(WINAPI * GETCAPCODEPAGESLIST_FN)							(DWORD dwPrinterDevID, wchar_t* pCodePagesList, DWORD* pdwStringBufferSize);

	typedef CcwResult(WINAPI * COMMGETREADTIMEOUT_FN)							(DWORD dwPrinterDevID, DWORD* pdwRTimeout);
	typedef CcwResult(WINAPI * COMMSETREADTIMEOUT_FN)							(DWORD dwPrinterDevID, DWORD dwRTimeout);
	typedef CcwResult(WINAPI * COMMGETWRITETIMEOUT_FN)							(DWORD dwPrinterDevID, DWORD* pdwWTimeout);
	typedef CcwResult(WINAPI * COMMSETWRITETIMEOUT_FN)							(DWORD dwPrinterDevID, DWORD dwWTimeout);
	typedef CcwResult(WINAPI * COMMCLEARREADBUFFER_FN)							(DWORD dwPrinterDevID);
	typedef CcwResult(WINAPI * COMMCLEARWRITEBUFFER_FN)							(DWORD dwPrinterDevID);
	typedef CcwResult(WINAPI * COMMREAD_FN)										(DWORD dwPrinterDevID, BYTE* bDataRead, DWORD dwDataToReadSize, DWORD* pdwReadDataSize);
	typedef CcwResult(WINAPI * COMMWRITE_FN)									(DWORD dwPrinterDevID, BYTE* bDataToWrite, DWORD dwDataToWriteSize, DWORD* pdwWrittenData);

	typedef CcwResult(WINAPI * TRANSACTIONPRINT_FN)								(DWORD dwPrinterDevID, TrPrintMode tpMode);

	typedef CcwResult(WINAPI * FEED_FN)											(DWORD dwPrinterDevID, DWORD dwnFeeds);
	typedef CcwResult(WINAPI * CUT_FN)											(DWORD dwPrinterDevID, CutType cuttype);
	typedef CcwResult(WINAPI * EJECT_FN)										(DWORD dwPrinterDevID, EjectType ejtype);
	typedef CcwResult(WINAPI * EJECTWITHTIMEOUT_FN)								(DWORD dwPrinterDevID, EjectType ejtype, DWORD dwTimeOutms);
	typedef CcwResult(WINAPI * PRESENT_FN)										(DWORD dwPrinterDevID, DWORD dwpresentMM);
	typedef CcwResult(WINAPI * ALIGN_FN)										(DWORD dwPrinterDevID, PaperAlignType aligntype);
	typedef CcwResult(WINAPI * OPENCASHDRAWER_FN)								(DWORD dwPrinterDevID, CashDrawerType drawerType, DWORD dwTimeOn, DWORD dwTimeOff);

	typedef CcwResult(WINAPI * PRINTERISREADY_FN)								(DWORD dwPrinterDevID, BOOL* pbOnLine);
	typedef CcwResult(WINAPI * GETPRINTERFULLSTATUS_FN)							(DWORD dwPrinterDevID, BYTE* pBuffer, PrinterStatusStruct* pStatusStruct);

	typedef CcwResult(WINAPI * PRINTTEXT_FN)									(DWORD dwPrinterDevID, wchar_t* pText, BOOL bAddLF);
	typedef CcwResult(WINAPI * PRINTTEXTEX_FN)									(DWORD dwPrinterDevID, wchar_t* pText, PrintFontStruct* pfontStruct, BOOL bAddLF);
	typedef CcwResult(WINAPI * PRINTTEXTUTF8_FN)								(DWORD dwPrinterDevID, char* pText, BOOL bAddLF);
	typedef CcwResult(WINAPI * PRINTTEXTUTF8EX_FN)								(DWORD dwPrinterDevID, char* pText, PrintFontStruct* pfontStruct, BOOL bAddLF);

	typedef CcwResult(WINAPI * SETIGNOREWHITEIMAGES_FN)							(DWORD dwPrinterDevID, BOOL bIgnore);
	typedef CcwResult(WINAPI * SETGRMODETOBLACKWHITE_FN)						(DWORD dwPrinterDevID, ImageGRMode imgGrModeType, BYTE bThreshold);
	typedef CcwResult(WINAPI * SETPAGEMODETOROLL_FN)							(DWORD dwPrinterDevID, BOOL bRollMode);
	typedef CcwResult(WINAPI * PRINTIMAGEFROMPATH_FN)							(DWORD dwPrinterDevID, wchar_t* pstrImageFilePath, PrintImageStruct* pImageStruct);
	typedef CcwResult(WINAPI * PRINTRAWIMAGE_FN)								(DWORD device, RAWBitDepth bits, BYTE* pRawBuffer, DWORD dwRawBufferSize, DWORD dwWidth, DWORD dwHeight, PrintImageStruct* pImageStruct);
	typedef CcwResult(WINAPI * SETGRAPHICSTOPMARGIN_FN)							(DWORD dwPrinterDevID, DWORD dwTopMargin);
	typedef CcwResult(WINAPI * GETGRAPHICSTOPMARGIN_FN)							(DWORD dwPrinterDevID, DWORD* pdwTopMargin);

	typedef CcwResult(WINAPI * PRINTBARCODESTRING_FN)							(DWORD dwPrinterDevID, wchar_t* strBrcText, PrintBarcodeStruct* pBarcodeStruct);
	typedef CcwResult(WINAPI * PRINTBARCODEBUFFER_FN)							(DWORD dwPrinterDevID, BYTE* bBrcBuffer, DWORD dwSrcBufferSize, PrintBarcodeStruct* pBarcodeStruct);

	typedef CcwResult(WINAPI * GETVARIABLE_FN)									(DWORD dwPrinterDevID, wchar_t* var, void* value);
	typedef CcwResult(WINAPI * SETVARIABLE_FN)									(DWORD dwPrinterDevID, wchar_t* var, void* value);

	typedef CcwResult(WINAPI * RAWDATATOPRINTSPOOLER_FN)						(wchar_t* pstrPrinterName, BYTE* bDataToWrite, DWORD dwDataToWriteSize, wchar_t* strDocName);
	typedef CcwResult(WINAPI * BINFILETOPRINTSPOOLER_FN)						(wchar_t* pstrPrinterName, wchar_t* pstrFilePath, wchar_t* strDocName);
	typedef CcwResult(WINAPI * ENUMINSTALLEDPRINTERS_FN)						(PrinterStruct* pPrintersArray, LPDWORD pdwNumPrinter);
	typedef CcwResult(WINAPI * OPENINSTALLEDPRINTER_FN)							(wchar_t* pstrPrinterName, DWORD* pdwPrinterDevID);

	typedef CcwResult(WINAPI * ENUMUSBDEVICES_FN)								(USBDeviceStruct* pUSBDevicesArray, LPDWORD pdwDeviceNum);
	typedef CcwResult(WINAPI * OPENPRINTERUSB_FN)								(WORD wVID, WORD wPID, wchar_t* pstrSN, DWORD* dwPrinterDevID);
	typedef CcwResult(WINAPI * OPENPRINTERUSBEX_FN)								(USBDeviceStruct* pUsbDev, DWORD* dwPrinterDevID);

	typedef CcwResult(WINAPI * ENUMETHDEVICES_FN)								(ETHDeviceStruct* pETHDevicesArray, LPDWORD pdwDeviceNum, DWORD dwSearchTimeout);
	typedef CcwResult(WINAPI * OPENPRINTERETH_FN)								(wchar_t* strPrinterIPAddress, DWORD dwPrinterIPPort, DWORD* dwPrinterDevID);
	typedef CcwResult(WINAPI * OPENPRINTERETHEX_FN)								(ETHDeviceStruct* pEthDev, DWORD* dwPrinterDevID);
	
	typedef CcwResult(WINAPI * ENUMCOMPORTS_FN)									(COMPortStruct* pCOMPortsArray, LPDWORD pdwPortsNum);
	typedef CcwResult(WINAPI * OPENPRINTERCOM_FN)								(wchar_t* strPrinterComPort, DWORD* dwPrinterDevID);
	typedef CcwResult(WINAPI * OPENPRINTERCOMEX_FN)								(COMPortStruct* pComDev, DWORD* dwPrinterDevID);
	

#ifdef __cplusplus
}
#endif

/// @endcond

#endif
